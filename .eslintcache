[{"C:\\Users\\jrns0\\com_community\\src\\index.js":"1","C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js":"2","C:\\Users\\jrns0\\com_community\\src\\App.js":"3","C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js":"4","C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js":"5","C:\\Users\\jrns0\\com_community\\src\\main\\main.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":669,"mtime":1610168821379,"results":"10","hashOfConfig":"8"},{"size":2787,"mtime":1610168454092,"results":"11","hashOfConfig":"8"},{"size":5834,"mtime":1610167894297,"results":"12","hashOfConfig":"8"},{"size":7049,"mtime":1610981657571,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"101a28b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jrns0\\com_community\\src\\index.js",[],["30","31"],"C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js",[],"C:\\Users\\jrns0\\com_community\\src\\App.js",["32","33","34","35"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login_page from \"./login/login_page\";\nimport Sign_page from \"./sign/sign_page\";\nimport Main from \"./main/main\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login_page />\n          </Route>\n          <Route exact path=\"/sign\">\n            <Sign_page />\n          </Route>\n          <Route exact path=\"/main\">\n            <Main />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js",["36"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./login_page.css\";\r\n\r\nclass Login_page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n    };\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n    const box = {\r\n      id: this.state.id,\r\n      pw: this.state.pw,\r\n    };\r\n    fetch(\"http://localhost:3001/login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(box),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.boolean === false) {\r\n          alert(\"아이디 또는 비밀번호가 틀렸어요\");\r\n        } else {\r\n          alert(\"로그인 성공\");\r\n          window.localStorage.setItem(\"user\", JSON.stringify(json));\r\n          window.location.replace(\"/Main\");\r\n        }\r\n      });\r\n  };\r\n\r\n  idinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      id: e.target.value,\r\n    });\r\n    console.log(this.state.id);\r\n  };\r\n\r\n  pwinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      pw: e.target.value,\r\n    });\r\n    console.log(this.state.pw);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"item\">\r\n            <div className=\"top_box\">\r\n              <text className=\"login_title_text\">동규휘제닷컴</text>\r\n            </div>\r\n            <div className=\"login_login_box\">\r\n              <text className=\"login_login_text\">로그인</text>\r\n            </div>\r\n            <div className=\"login_id_box\">\r\n              <text className=\"login_id_text\">아이디</text>\r\n            </div>\r\n            <div className=\"login_id_inputbox\">\r\n              <input onChange={this.idinput} className=\"login_id_input\" />\r\n            </div>\r\n            <div className=\"login_pw_box\">\r\n              <text className=\"login_id_text\">비밀번호</text>\r\n            </div>\r\n            <div className=\"login_id_inputbox\">\r\n              <input onChange={this.pwinput} className=\"login_id_input\" />\r\n            </div>\r\n            <div className=\"login_enterbottonbox\">\r\n              <button className=\"login_enterbotton\" onClick={this.login}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"login_blank\"></div>\r\n            <div className=\"login_bottom_box\">\r\n              <a\r\n                href=\"/sign\"\r\n                className=\"login_bottom_text\"\r\n                onClick={this.goSign}\r\n              >\r\n                처음이신가요? 가입하세요\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login_page;\r\n","C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js",["37","38","39","40","41","42"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sign_page.css\";\r\nimport { Switch, Route, Link, NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Sign_page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      pw2: \"\",\r\n      nick: \"\",\r\n      idcheck: false,\r\n      pwcheck: false,\r\n      niccheck: false,\r\n    };\r\n  }\r\n  checkPW = (e) => {\r\n    if (this.state.pw === this.state.pw2) {\r\n      alert(\"비밀번호 일치합니다.\");\r\n      this.setState({\r\n        pwcheck: true,\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다.\");\r\n    }\r\n    console.log(this.state.pwcheck);\r\n  };\r\n\r\n  info_input = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log([e.target.name] + this.state[e.target.name]);\r\n  };\r\n\r\n  checkID = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.id);\r\n    const data = {\r\n      id: this.state.id,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checkid\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 ID입니다\");\r\n          this.setState({\r\n            idcheck: true,\r\n          });\r\n          console.log(this.state.idcheck);\r\n        } else {\r\n          alert(\"다른 ID를 입력해주세요\");\r\n        }\r\n      });\r\n  };\r\n\r\n  checkNICK = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.nick);\r\n    const data = {\r\n      nick: this.state.nick,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checknick\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 닉네임입니다\");\r\n          this.setState({\r\n            niccheck: true,\r\n          });\r\n        } else {\r\n          alert(\"다른 닉네임을 입력해주세요\");\r\n        }\r\n        console.log(this.state.niccheck);\r\n      });\r\n  };\r\n\r\n  goSign = (e) => {\r\n    if (\r\n      this.state.idcheck === true &&\r\n      this.state.niccheck === true &&\r\n      this.state.pwcheck === true\r\n    ) {\r\n      const user_info = {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n        pw2: this.state.pw2,\r\n        nick: this.state.nick,\r\n      };\r\n      fetch(\"http://localhost:3001/signup\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user_info),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json) {\r\n            alert(\"회원가입 성공\");\r\n            window.location.href = \"/\";\r\n          } else {\r\n            alert(\"error\");\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"확인을 모두 눌러주세요\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"item\">\r\n            <div className=\"top_box\">\r\n              <text className=\"sign_title_text\">동규휘제닷컴</text>\r\n            </div>\r\n            <div className=\"sign_sign_box\">\r\n              <text className=\"sign_sign_text\">회원가입</text>\r\n            </div>\r\n            <div className=\"sign_id_box\">\r\n              <text className=\"sign_id_text\">아이디</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"id\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkID}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw\"\r\n                className=\"sign_id_input\"\r\n              />\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호 확인</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw2\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkPW}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">닉네임</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"nick\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkNICK}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_enterbottonbox\">\r\n              <button className=\"sign_enterbotton\" onClick={this.goSign}>\r\n                가입\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_blank\"></div>\r\n            <div className=\"sign_bottom_box\">\r\n              <a href=\"/\" className=\"sign_bottom_text\">\r\n                로그인 화면으로\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sign_page;\r\n","C:\\Users\\jrns0\\com_community\\src\\main\\main.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":3,"column":17,"nodeType":"49","messageId":"50","endLine":3,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":15,"column":13,"nodeType":"54","endLine":15,"endColumn":27},{"ruleId":"52","severity":1,"message":"55","line":18,"column":13,"nodeType":"54","endLine":18,"endColumn":26},{"ruleId":"47","severity":1,"message":"56","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"56","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"57","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"58","line":4,"column":18,"nodeType":"49","messageId":"50","endLine":4,"endColumn":23},{"ruleId":"47","severity":1,"message":"59","line":4,"column":25,"nodeType":"49","messageId":"50","endLine":4,"endColumn":29},{"ruleId":"47","severity":1,"message":"60","line":4,"column":31,"nodeType":"49","messageId":"50","endLine":4,"endColumn":38},{"ruleId":"47","severity":1,"message":"61","line":4,"column":40,"nodeType":"49","messageId":"50","endLine":4,"endColumn":50},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react/jsx-pascal-case","Imported JSX component Login_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Sign_page must be in PascalCase or SCREAMING_SNAKE_CASE","'PropTypes' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]