[{"C:\\Users\\jrns0\\com_community\\src\\index.js":"1","C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js":"2","C:\\Users\\jrns0\\com_community\\src\\App.js":"3","C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js":"4","C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js":"5","C:\\Users\\jrns0\\com_community\\src\\main\\main.js":"6","C:\\Users\\jrns0\\com_community\\src\\board\\boardMain.js":"7","C:\\Users\\jrns0\\com_community\\src\\board\\app1.js":"8","C:\\Users\\jrns0\\com_community\\src\\board\\boardMete.js":"9","C:\\Users\\jrns0\\com_community\\src\\board\\boardwrite.js":"10","C:\\Users\\jrns0\\com_community\\src\\board\\boardMete2.js":"11","C:\\Users\\jrns0\\com_community\\src\\board\\boardreple.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":945,"mtime":1611670055618,"results":"16","hashOfConfig":"14"},{"size":3016,"mtime":1611828770010,"results":"17","hashOfConfig":"14"},{"size":5834,"mtime":1610981845631,"results":"18","hashOfConfig":"14"},{"size":7689,"mtime":1611825697320,"results":"19","hashOfConfig":"14"},{"size":1733,"mtime":1611834425604,"results":"20","hashOfConfig":"14"},{"size":3699,"mtime":1611670055618,"results":"21","hashOfConfig":"14"},{"size":7160,"mtime":1611816253443,"results":"22","hashOfConfig":"14"},{"size":3009,"mtime":1611728766938,"results":"23","hashOfConfig":"14"},{"size":2981,"mtime":1611831761325,"results":"24","hashOfConfig":"14"},{"size":1898,"mtime":1611833720924,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"101a28b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jrns0\\com_community\\src\\index.js",[],["52","53"],"C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js",[],"C:\\Users\\jrns0\\com_community\\src\\App.js",["54","55","56","57"],"C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js",["58"],"C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js",["59","60","61","62","63","64"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sign_page.css\";\r\nimport { Switch, Route, Link, NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Sign_page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      pw2: \"\",\r\n      nick: \"\",\r\n      idcheck: false,\r\n      pwcheck: false,\r\n      niccheck: false,\r\n    };\r\n  }\r\n  checkPW = (e) => {\r\n    if (this.state.pw === this.state.pw2) {\r\n      alert(\"비밀번호 일치합니다.\");\r\n      this.setState({\r\n        pwcheck: true,\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다.\");\r\n    }\r\n    console.log(this.state.pwcheck);\r\n  };\r\n\r\n  info_input = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log([e.target.name] + this.state[e.target.name]);\r\n  };\r\n\r\n  checkID = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.id);\r\n    const data = {\r\n      id: this.state.id,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checkid\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 ID입니다\");\r\n          this.setState({\r\n            idcheck: true,\r\n          });\r\n          console.log(this.state.idcheck);\r\n        } else {\r\n          alert(\"다른 ID를 입력해주세요\");\r\n        }\r\n      });\r\n  };\r\n\r\n  checkNICK = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.nick);\r\n    const data = {\r\n      nick: this.state.nick,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checknick\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 닉네임입니다\");\r\n          this.setState({\r\n            niccheck: true,\r\n          });\r\n        } else {\r\n          alert(\"다른 닉네임을 입력해주세요\");\r\n        }\r\n        console.log(this.state.niccheck);\r\n      });\r\n  };\r\n\r\n  goSign = (e) => {\r\n    if (\r\n      this.state.idcheck === true &&\r\n      this.state.niccheck === true &&\r\n      this.state.pwcheck === true\r\n    ) {\r\n      const user_info = {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n        pw2: this.state.pw2,\r\n        nick: this.state.nick,\r\n      };\r\n      fetch(\"http://localhost:3001/signup\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user_info),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json) {\r\n            alert(\"회원가입 성공\");\r\n            window.location.href = \"/\";\r\n          } else {\r\n            alert(\"error\");\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"확인을 모두 눌러주세요\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"item\">\r\n            <div className=\"top_box\">\r\n              <text className=\"sign_title_text\">동규휘제닷컴</text>\r\n            </div>\r\n            <div className=\"sign_sign_box\">\r\n              <text className=\"sign_sign_text\">회원가입</text>\r\n            </div>\r\n            <div className=\"sign_id_box\">\r\n              <text className=\"sign_id_text\">아이디</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"id\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkID}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw\"\r\n                className=\"sign_id_input\"\r\n              />\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호 확인</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw2\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkPW}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">닉네임</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"nick\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkNICK}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_enterbottonbox\">\r\n              <button className=\"sign_enterbotton\" onClick={this.goSign}>\r\n                가입\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_blank\"></div>\r\n            <div className=\"sign_bottom_box\">\r\n              <a href=\"/\" className=\"sign_bottom_text\">\r\n                로그인 화면으로\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sign_page;\r\n","C:\\Users\\jrns0\\com_community\\src\\main\\main.js",[],"C:\\Users\\jrns0\\com_community\\src\\board\\boardMain.js",["65","66"],"C:\\Users\\jrns0\\com_community\\src\\board\\app1.js",["67"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardMete.js",["68","69","70","71","72"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardwrite.js",["73","74"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardMete2.js",["75"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardreple.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":3,"column":17,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":17,"column":13,"nodeType":"88","endLine":17,"endColumn":27},{"ruleId":"86","severity":1,"message":"89","line":20,"column":13,"nodeType":"88","endLine":20,"endColumn":26},{"ruleId":"81","severity":1,"message":"90","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},{"ruleId":"81","severity":1,"message":"90","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},{"ruleId":"81","severity":1,"message":"91","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":16},{"ruleId":"81","severity":1,"message":"92","line":4,"column":18,"nodeType":"83","messageId":"84","endLine":4,"endColumn":23},{"ruleId":"81","severity":1,"message":"93","line":4,"column":25,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"81","severity":1,"message":"94","line":4,"column":31,"nodeType":"83","messageId":"84","endLine":4,"endColumn":38},{"ruleId":"81","severity":1,"message":"95","line":4,"column":40,"nodeType":"83","messageId":"84","endLine":4,"endColumn":50},{"ruleId":"81","severity":1,"message":"96","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":11},{"ruleId":"81","severity":1,"message":"97","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":9},{"ruleId":"98","severity":1,"message":"99","line":104,"column":11,"nodeType":"88","endLine":104,"endColumn":45},{"ruleId":"81","severity":1,"message":"100","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"97","line":12,"column":8,"nodeType":"83","messageId":"84","endLine":12,"endColumn":9},{"ruleId":"81","severity":1,"message":"101","line":13,"column":8,"nodeType":"83","messageId":"84","endLine":13,"endColumn":14},{"ruleId":"81","severity":1,"message":"102","line":50,"column":7,"nodeType":"83","messageId":"84","endLine":50,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":159,"column":13,"nodeType":"105","messageId":"106","endLine":159,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":72,"column":26,"nodeType":"109","messageId":"106","endLine":72,"endColumn":28},{"ruleId":"107","severity":1,"message":"108","line":72,"column":54,"nodeType":"109","messageId":"106","endLine":72,"endColumn":56},{"ruleId":"81","severity":1,"message":"110","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":58,"column":13,"nodeType":"88","endLine":58,"endColumn":78},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react/jsx-pascal-case","Imported JSX component Login_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Sign_page must be in PascalCase or SCREAMING_SNAKE_CASE","'PropTypes' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'App' is defined but never used.","'$' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'jQuery' is defined but never used.","'useStyles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'App1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]