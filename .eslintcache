[{"C:\\Users\\jrns0\\com_community\\src\\index.js":"1","C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js":"2","C:\\Users\\jrns0\\com_community\\src\\App.js":"3","C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js":"4","C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js":"5","C:\\Users\\jrns0\\com_community\\src\\main\\main.js":"6","C:\\Users\\jrns0\\com_community\\src\\board\\boardMain.js":"7","C:\\Users\\jrns0\\com_community\\src\\board\\app1.js":"8","C:\\Users\\jrns0\\com_community\\src\\board\\boardMete.js":"9","C:\\Users\\jrns0\\com_community\\src\\board\\boardwrite.js":"10","C:\\Users\\jrns0\\com_community\\src\\board\\boardMete2.js":"11","C:\\Users\\jrns0\\com_community\\src\\board\\boardreple.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":945,"mtime":1611670055618,"results":"16","hashOfConfig":"14"},{"size":3016,"mtime":1611834520029,"results":"17","hashOfConfig":"14"},{"size":5834,"mtime":1610981845631,"results":"18","hashOfConfig":"14"},{"size":9423,"mtime":1612176895207,"results":"19","hashOfConfig":"14"},{"size":1738,"mtime":1612177043880,"results":"20","hashOfConfig":"14"},{"size":3699,"mtime":1611670055618,"results":"21","hashOfConfig":"14"},{"size":7733,"mtime":1612187045237,"results":"22","hashOfConfig":"14"},{"size":3089,"mtime":1612170976604,"results":"23","hashOfConfig":"14"},{"size":3321,"mtime":1612176775862,"results":"24","hashOfConfig":"14"},{"size":1898,"mtime":1611834520025,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"101a28b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\jrns0\\com_community\\src\\index.js",[],["56","57"],"C:\\Users\\jrns0\\com_community\\src\\reportWebVitals.js",[],"C:\\Users\\jrns0\\com_community\\src\\App.js",["58","59","60","61"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login_page from \"./login/login_page\";\r\nimport Sign_page from \"./sign/sign_page\";\r\nimport Main from \"./main/main\";\r\nimport App1 from \"./board/app1\";\r\nimport Boardwrite from \"./board/boardwrite\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login_page />\r\n          </Route>\r\n          <Route exact path=\"/sign\">\r\n            <Sign_page />\r\n          </Route>\r\n          <Route exact path=\"/main\">\r\n            <Main />\r\n          </Route>\r\n          <Route exact path=\"/App1\">\r\n            <App1 />\r\n          </Route>\r\n          <Route exact path=\"/write\">\r\n            <Boardwrite />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jrns0\\com_community\\src\\login\\login_page.js",["62"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./login_page.css\";\r\n\r\nclass Login_page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n    };\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n    const box = {\r\n      id: this.state.id,\r\n      pw: this.state.pw,\r\n    };\r\n    fetch(\"http://localhost:3001/login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(box),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.boolean === false) {\r\n          alert(\"아이디 또는 비밀번호가 틀렸어요\");\r\n        } else {\r\n          alert(\"로그인 성공\");\r\n          localStorage.setItem(\"userid\", json.id);\r\n          localStorage.setItem(\"usernick\", json.nick);\r\n\r\n          console.log(localStorage.getItem(\"userid\"));\r\n          console.log(localStorage.getItem(\"usernick\"));\r\n\r\n          // window.localStorage.setItem(\"user\", JSON.stringify(json));\r\n          window.location.replace(\"/Main\");\r\n        }\r\n      });\r\n  };\r\n\r\n  idinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      id: e.target.value,\r\n    });\r\n    console.log(this.state.id);\r\n  };\r\n\r\n  pwinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      pw: e.target.value,\r\n    });\r\n    console.log(this.state.pw);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"item\">\r\n            <div className=\"top_box\">\r\n              <text className=\"login_title_text\">동규휘제닷컴</text>\r\n            </div>\r\n            <div className=\"login_login_box\">\r\n              <text className=\"login_login_text\">로그인</text>\r\n            </div>\r\n            <div className=\"login_id_box\">\r\n              <text className=\"login_id_text\">아이디</text>\r\n            </div>\r\n            <div className=\"login_id_inputbox\">\r\n              <input onChange={this.idinput} className=\"login_id_input\" />\r\n            </div>\r\n            <div className=\"login_pw_box\">\r\n              <text className=\"login_id_text\">비밀번호</text>\r\n            </div>\r\n            <div className=\"login_id_inputbox\">\r\n              <input onChange={this.pwinput} className=\"login_id_input\" />\r\n            </div>\r\n            <div className=\"login_enterbottonbox\">\r\n              <button className=\"login_enterbotton\" onClick={this.login}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"login_blank\"></div>\r\n            <div className=\"login_bottom_box\">\r\n              <a\r\n                href=\"/sign\"\r\n                className=\"login_bottom_text\"\r\n                onClick={this.goSign}\r\n              >\r\n                처음이신가요? 가입하세요\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login_page;\r\n","C:\\Users\\jrns0\\com_community\\src\\sign\\sign_page.js",["63","64","65","66","67","68"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sign_page.css\";\r\nimport { Switch, Route, Link, NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Sign_page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      pw2: \"\",\r\n      nick: \"\",\r\n      idcheck: false,\r\n      pwcheck: false,\r\n      niccheck: false,\r\n    };\r\n  }\r\n  checkPW = (e) => {\r\n    if (this.state.pw === this.state.pw2) {\r\n      alert(\"비밀번호 일치합니다.\");\r\n      this.setState({\r\n        pwcheck: true,\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다.\");\r\n    }\r\n    console.log(this.state.pwcheck);\r\n  };\r\n\r\n  info_input = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log([e.target.name] + this.state[e.target.name]);\r\n  };\r\n\r\n  checkID = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.id);\r\n    const data = {\r\n      id: this.state.id,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checkid\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 ID입니다\");\r\n          this.setState({\r\n            idcheck: true,\r\n          });\r\n          console.log(this.state.idcheck);\r\n        } else {\r\n          alert(\"다른 ID를 입력해주세요\");\r\n        }\r\n      });\r\n  };\r\n\r\n  checkNICK = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.nick);\r\n    const data = {\r\n      nick: this.state.nick,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/checknick\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 닉네임입니다\");\r\n          this.setState({\r\n            niccheck: true,\r\n          });\r\n        } else {\r\n          alert(\"다른 닉네임을 입력해주세요\");\r\n        }\r\n        console.log(this.state.niccheck);\r\n      });\r\n  };\r\n\r\n  goSign = (e) => {\r\n    if (\r\n      this.state.idcheck === true &&\r\n      this.state.niccheck === true &&\r\n      this.state.pwcheck === true\r\n    ) {\r\n      const user_info = {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n        pw2: this.state.pw2,\r\n        nick: this.state.nick,\r\n      };\r\n      fetch(\"http://localhost:3001/signup\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user_info),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json) {\r\n            alert(\"회원가입 성공\");\r\n            window.location.href = \"/\";\r\n          } else {\r\n            alert(\"error\");\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"확인을 모두 눌러주세요\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"item\">\r\n            <div className=\"top_box\">\r\n              <text className=\"sign_title_text\">동규휘제닷컴</text>\r\n            </div>\r\n            <div className=\"sign_sign_box\">\r\n              <text className=\"sign_sign_text\">회원가입</text>\r\n            </div>\r\n            <div className=\"sign_id_box\">\r\n              <text className=\"sign_id_text\">아이디</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"id\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkID}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw\"\r\n                className=\"sign_id_input\"\r\n              />\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호 확인</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                name=\"pw2\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkPW}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">닉네임</text>\r\n            </div>\r\n            <div className=\"sign_id_inputbox\">\r\n              <input\r\n                onChange={this.info_input}\r\n                name=\"nick\"\r\n                className=\"sign_id_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkNICK}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_enterbottonbox\">\r\n              <button className=\"sign_enterbotton\" onClick={this.goSign}>\r\n                가입\r\n              </button>\r\n            </div>\r\n            <div className=\"sign_blank\"></div>\r\n            <div className=\"sign_bottom_box\">\r\n              <a href=\"/\" className=\"sign_bottom_text\">\r\n                로그인 화면으로\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sign_page;\r\n","C:\\Users\\jrns0\\com_community\\src\\main\\main.js",[],"C:\\Users\\jrns0\\com_community\\src\\board\\boardMain.js",["69","70"],"C:\\Users\\jrns0\\com_community\\src\\board\\app1.js",["71"],"import React, { Component } from \"react\";\r\n\r\nclass App1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    maxNo: 3,\r\n\r\n    boards: [\r\n      {\r\n        brdno: 1,\r\n        brdwriter: \"Lee SunSin\",\r\n        brdtitle: \"If you intend to live then you die\",\r\n        brddate: new Date(),\r\n      },\r\n      {\r\n        brdno: 2,\r\n        brdwriter: \"So SiNo\",\r\n        brdtitle: \"Founder for two countries\",\r\n        brddate: new Date(),\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleSaveData = (data) => {\r\n    let boards = this.state.boards;\r\n    if (data.brdno === null || data.brdno === \"\" || data.brdno === undefined) {\r\n      // new : Insert\r\n      this.setState({\r\n        maxNo: this.state.maxNo + 1,\r\n        boards: boards.concat({\r\n          brdno: this.state.maxNo,\r\n          brddate: new Date(),\r\n          brdwriter: data.brdwriter,\r\n          brdtitle: data.brdtitle,\r\n        }),\r\n      });\r\n    } else {\r\n      // Update\r\n      this.setState({\r\n        boards: boards.map((row) =>\r\n          data.brdno === row.brdno ? { ...data } : row\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemove = (brdno) => {\r\n    this.setState({\r\n      boards: this.state.boards.filter((row) => row.brdno !== brdno),\r\n    });\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.child.current.handleSelectRow(row);\r\n  };\r\n\r\n  render() {\r\n    const { boards } = this.state;\r\n    return (\r\n      <div>\r\n        <BoardForm onSaveData={this.handleSaveData} ref={this.child} />\r\n\r\n        <table border=\"1\">\r\n          <tbody>\r\n            <tr align=\"center\">\r\n              <td width=\"50\">No.</td> <td width=\"300\">Title</td>\r\n              <td width=\"100\">Name</td> <td width=\"100\">Date</td>\r\n            </tr>\r\n\r\n            {boards.map((row) => (\r\n              <BoardItem\r\n                key={row.brdno}\r\n                row={row}\r\n                onRemove={this.handleRemove}\r\n                onSelectRow={this.handleSelectRow}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass BoardItem extends React.Component {\r\n  handleRemove = () => {\r\n    const { row, onRemove } = this.props;\r\n    onRemove(row.brdno);\r\n  };\r\n\r\n  handleSelectRow = () => {\r\n    const { row, onSelectRow } = this.props;\r\n    onSelectRow(row);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.props.row.brdno}</td>\r\n        <td>\r\n          <a onClick={this.handleSelectRow}>{this.props.row.brdtitle}</a>\r\n        </td>\r\n        <td>{this.props.row.brdwriter}</td>\r\n        <td>{this.props.row.brddate.toLocaleDateString(\"ko-KR\")}</td>\r\n        <td>\r\n          <button onClick={this.handleRemove}>X</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass BoardForm extends Component {\r\n  state = {\r\n    brdwriter: \"\",\r\n    brdtitle: \"\",\r\n  };\r\n  handleSelectRow = (row) => {\r\n    this.setState(row);\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSaveData(this.state);\r\n    this.setState({ brdno: \"\", brdwriter: \"\", brdtitle: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {\" \"}\r\n        <input\r\n          placeholder=\"title\"\r\n          name=\"brdtitle\"\r\n          value={this.state.brdtitle}\r\n          onChange={this.handleChange}\r\n        />{\" \"}\r\n        <input\r\n          placeholder=\"name\"\r\n          name=\"brdwriter\"\r\n          value={this.state.brdwriter}\r\n          onChange={this.handleChange}\r\n        />{\" \"}\r\n        <button type=\"submit\">Save</button>{\" \"}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App1;\r\n","C:\\Users\\jrns0\\com_community\\src\\board\\boardMete.js",["72","73","74","75","76"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardwrite.js",["77","78"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardMete2.js",["79","80","81"],"C:\\Users\\jrns0\\com_community\\src\\board\\boardreple.js",["82"],"import React, { Component } from \"react\";\r\nimport \"./boardreple.css\";\r\nimport like from \"./like.png\";\r\n\r\nlet list = [];\r\n\r\nfunction createData(nick, time, reple, recomend) {\r\n  return { nick, time, reple, recomend };\r\n}\r\n\r\nclass Boardreple extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //   무\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = {};\r\n\r\n    fetch(\"http://localhost:3001/repDownload\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json === undefined) {\r\n          alert(\"오류\");\r\n        } else {\r\n          //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n          //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n          for (let i = 0; i < json.length; i++) {\r\n            list = list.concat(\r\n              createData(\r\n                json[i].nick,\r\n                json[i].time,\r\n                json[i].reple,\r\n                json[i].recomend\r\n              )\r\n            );\r\n          }\r\n\r\n          console.log(json);\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n    const content = list.map((list) => (\r\n      <div className=\"rep_box\">\r\n        <div className=\"rep_title\">\r\n          <div className=\"rep_WTbox\">\r\n            <div className=\"rep_writer\">{list.nick}</div>\r\n            <div className=\"rep_time\"> {list.time}</div>\r\n          </div>\r\n          <div className=\"rep_buttonbox\">\r\n            <img src={like} width=\"12\" height=\"12\" className=\"rep_rexobtn\" />\r\n            <div className=\"rep_reco\">좋아요: {list.recomend}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rep_reple\">{list.reple}</div>\r\n      </div>\r\n    ));\r\n\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nexport default Boardreple;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":3,"column":17,"nodeType":"89","messageId":"90","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":17,"column":13,"nodeType":"94","endLine":17,"endColumn":27},{"ruleId":"92","severity":1,"message":"95","line":20,"column":13,"nodeType":"94","endLine":20,"endColumn":26},{"ruleId":"87","severity":1,"message":"96","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"96","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"97","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":16},{"ruleId":"87","severity":1,"message":"98","line":4,"column":18,"nodeType":"89","messageId":"90","endLine":4,"endColumn":23},{"ruleId":"87","severity":1,"message":"99","line":4,"column":25,"nodeType":"89","messageId":"90","endLine":4,"endColumn":29},{"ruleId":"87","severity":1,"message":"100","line":4,"column":31,"nodeType":"89","messageId":"90","endLine":4,"endColumn":38},{"ruleId":"87","severity":1,"message":"101","line":4,"column":40,"nodeType":"89","messageId":"90","endLine":4,"endColumn":50},{"ruleId":"87","severity":1,"message":"102","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":11},{"ruleId":"87","severity":1,"message":"103","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":9},{"ruleId":"104","severity":1,"message":"105","line":104,"column":11,"nodeType":"94","endLine":104,"endColumn":45},{"ruleId":"87","severity":1,"message":"106","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"103","line":12,"column":8,"nodeType":"89","messageId":"90","endLine":12,"endColumn":9},{"ruleId":"87","severity":1,"message":"107","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":14},{"ruleId":"87","severity":1,"message":"108","line":50,"column":7,"nodeType":"89","messageId":"90","endLine":50,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":168,"column":13,"nodeType":"111","messageId":"112","endLine":168,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":74,"column":26,"nodeType":"115","messageId":"112","endLine":74,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":74,"column":54,"nodeType":"115","messageId":"112","endLine":74,"endColumn":56},{"ruleId":"87","severity":1,"message":"116","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":12},{"ruleId":"87","severity":1,"message":"117","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":69,"column":15,"nodeType":"94","endLine":74,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":58,"column":13,"nodeType":"94","endLine":58,"endColumn":78},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react/jsx-pascal-case","Imported JSX component Login_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Sign_page must be in PascalCase or SCREAMING_SNAKE_CASE","'PropTypes' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'App' is defined but never used.","'$' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'jQuery' is defined but never used.","'useStyles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'App1' is defined but never used.","'Boardreple' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]